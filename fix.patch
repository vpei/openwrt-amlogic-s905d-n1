diff --git a/make-openwrt/openwrt-files/common-files/etc/profile.d/30-sysinfo.sh b/make-openwrt/openwrt-files/common-files/etc/profile.d/30-sysinfo.sh
index e603e45..05bd6a9 100755
--- a/make-openwrt/openwrt-files/common-files/etc/profile.d/30-sysinfo.sh
+++ b/make-openwrt/openwrt-files/common-files/etc/profile.d/30-sysinfo.sh
@@ -18,8 +18,11 @@ SHOW_IP_PATTERN="^[ewr].*|^br.*|^lt.*|^umts.*"
 # find the partition where root is located
 ROOT_PTNAME="$(df / | tail -n1 | awk '{print $1}' | awk -F '/' '{print $3}')"
 if [[ -z "${ROOT_PTNAME}" ]]; then
-	echo "Cannot find the partition corresponding to the root file system!"
-	exit 1
+	ROOT_PTNAME="$(df /overlay | tail -n1 | awk '{print $1}' | awk -F '/' '{print $3}')"
+	if [[ -z "${ROOT_PTNAME}" ]]; then
+		echo "Cannot find the partition corresponding to the root file system!"
+		exit 1
+	fi
 fi
 
 # find the disk where the partition is located, only supports mmcblk?p? sd?? hd?? vd?? and other formats
diff --git a/make-openwrt/openwrt-files/common-files/usr/sbin/openwrt-tf b/make-openwrt/openwrt-files/common-files/usr/sbin/openwrt-tf
index bd1744d..460c5c8 100755
--- a/make-openwrt/openwrt-files/common-files/usr/sbin/openwrt-tf
+++ b/make-openwrt/openwrt-files/common-files/usr/sbin/openwrt-tf
@@ -39,7 +39,10 @@ error_msg() {
 do_checkdisk() {
     # Find the partition where root is located
     ROOT_PTNAME="$(df / | tail -n1 | awk '{print $1}' | awk -F '/' '{print $3}')"
-    [[ -z "${ROOT_PTNAME}" ]] && error_msg "Cannot find the partition corresponding to the root file system!"
+    [[ -z "${ROOT_PTNAME}" ]] && {
+        ROOT_PTNAME="$(df /overlay | tail -n1 | awk '{print $1}' | awk -F '/' '{print $3}')"
+        [[ -z "${ROOT_PTNAME}" ]] && error_msg "Cannot find the partition corresponding to the root file system!"
+    }
 
     # Find the disk where the partition is located, only supports mmcblk?p? sd?? hd?? vd?? and other formats
     case "${ROOT_PTNAME}" in
@@ -102,6 +105,10 @@ create_new_partition() {
     parted /dev/${DISK_NAME} mkpart primary btrfs $((START_P3))MiB $((START_P3 + ROOTFS_MB - 1))MiB 2>/dev/null
     parted /dev/${DISK_NAME} mkpart primary btrfs $((START_P3 + ROOTFS_MB))MiB 100% 2>/dev/null
 
+    # Wait automounting partitions
+    while [[ "$(mount | grep -c "/dev/${PT_PRE}3")" == "0" || "$(mount | grep -c "/dev/${PT_PRE}4")" == "0" ]]; do
+        sleep 1; done
+
     echo -e "${INFO} Start formatting new partition..."
     # Format the third partition
     mkdir -p /mnt/${PT_PRE}3
